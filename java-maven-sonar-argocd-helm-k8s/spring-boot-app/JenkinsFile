pipeline {
  agent any
    
    tools {
        jdk 'jdk17'
        maven 'maven3'
}
  stages {
    stage('Checkout') {
      steps {
        git branch: 'main', credentialsId: 'git-cred', url: 'https://github.com/Sukanyagit/Jenkins-Zero-To-Hero.git'
        sh 'checkout passed'
      }
    }
    stage('Build and Test') {
      steps {
        sh 'Build and Test stage started'
        sh 'ls -ltr'
        // build the project and create a JAR file
        sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package'
        sh 'Build and Test stage ended'
      }
    }
    /*stage('Static Code Analysis') {
      environment {
        SONAR_URL = "http://13.233.109.176:9000"
      }
      steps {
        sh 'Static Code Analysis stage started'
        withCredentials([string(credentialsId: 'jenkins-sonar', variable: 'SONAR_AUTH_TOKEN')]) {
        sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
        sh 'Static Code Analysis stage ended'
}
      }
    }*/
    stage('Build and Push Docker Image') {
      environment {
        DOCKER_IMAGE = "sukanyadocker555/ultimate-cicd:${BUILD_NUMBER}"
        // DOCKERFILE_LOCATION = "java-maven-sonar-argocd-helm-k8s/spring-boot-app/Dockerfile"
        REGISTRY_CREDENTIALS = credentials('dockerhub-cred')
      }
      steps {
        script {
            sh 'Build and Push Docker Image stage started'
            sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && docker build -t ${DOCKER_IMAGE} .'
            def dockerImage = docker.image("${DOCKER_IMAGE}")
            docker.withRegistry('https://index.docker.io/v1/', "dockerhub-cred") {
            dockerImage.push()
            sh 'Build and Push Docker Image stage ended'
            }
        }
      }
    }
    stage('Update Deployment File') {
        environment {
            GIT_REPO_NAME = "Jenkins-Zero-To-Hero"
            GIT_USER_NAME = "Sukanyagit"
        }
        steps {
            withCredentials([string(credentialsId: 'git-cred', variable: 'GITHUB_TOKEN')]) {
               sh 'Update Deployment File stage started'
                sh '''
                    git config user.email "sukanyab2304@gmail.com"
                    git config user.name "Sukanya Behera"
                    BUILD_NUMBER=${BUILD_NUMBER}
                    sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                    git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                    git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                    git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
                '''
                sh 'Update Deployment File stage ended'
            }
        }
    }
  }
}
